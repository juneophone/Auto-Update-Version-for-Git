apply plugin: 'com.android.application'

// Auto version code  -- start--
def gitVersionCode() {
    def cmd = 'git rev-list HEAD --first-parent --count'
    cmd.execute().text.trim().toInteger()
}

def gitVersionTag() {
    // set default version title
    def versionTitle = '1.00.'
    // get git tags string
    def cmd = 'git describe --tags'
    def version = cmd.execute().text.trim()
    // get git HASH code
    def cmd1 = 'git rev-parse --short HEAD'
    def hashCode = cmd1.execute().text.trim()
    // get git HEAD build count number
    def cmd2 = 'git rev-list HEAD --first-parent --count'
    def versioncount = cmd2.execute().text.trim().toInteger()
    // get git branch name
    def cmd3 = 'git rev-parse --abbrev-ref HEAD'
    def branchs = cmd3.execute().text.trim()
    // get now date
    String today = new Date().format("MMdd")

    def pattern = "-(\\d+)-g"
    def matcher = version =~ pattern

    if (matcher) {
        version = version.substring(0, matcher.start()) + "." + matcher[0][1]
    } else {
        version = version + versionTitle + today + versioncount + "-" + hashCode
    }

    return version
}
// Auto version code  -- end--

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"
    defaultConfig {
        applicationId "com.eink.autoupdateandroidstudioversionname"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Auto update version and apk name  --start--
    applicationVariants.all { variant ->
        // writer version information to apk
        variant.outputs.each { output ->
            // set app versionName and versionCode
            output.versionNameOverride = gitVersionTag()
            output.versionCodeOverride = gitVersionCode()
        }

        variant.outputs.all {
            //set build apk name
            outputFileName = defaultConfig.applicationId + '-' + gitVersionTag() + '-' + variant.buildType.name + '.apk'
        }
    }
    // Auto update version and apk name  --end--
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
